name: CI with SonarCloud # ชื่อ Workflow ที่จะแสดงในแท็บ Actions

on:
  push:
    branches:
      - main # ทำงานเมื่อมีการ push ไปยัง branch main
  pull_request:
    types: [opened, synchronize, reopened] # ทำงานเมื่อมีการสร้างหรืออัปเดต PR

jobs:
  build:
    name: Build and Analyze # ชื่องานที่จะทำใน workflow นี้
    runs-on: ubuntu-latest # ใช้ runner ที่เป็น Ubuntu version ล่าสุด

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # ดึงโค้ดจาก GitHub repository (updated to v4)
        with:
          fetch-depth: 0 # ดึง commit history ทั้งหมด เพื่อให้ Sonar วิเคราะห์ new code ได้ถูกต้อง

      - name: Set up Node.js
        uses: actions/setup-node@v4 # ติดตั้ง Node.js บน runner (updated to v4)
        with:
          node-version: "18" # ระบุเวอร์ชัน Node.js ที่ต้องการใช้
          cache: "npm" # เพิ่ม npm cache เพื่อความเร็ว

      - name: Install dependencies
        run: npm ci # ใช้ npm ci แทน npm install เพื่อความเร็วและความน่าเชื่อถือ

      - name: Run security audit
        run: npm audit --audit-level=moderate # ตรวจสอบ security vulnerabilities
        continue-on-error: false # หยุด workflow หากพบ vulnerability

      - name: Run tests
        run: npm run test:ci # รัน unit tests พร้อม coverage report
        env:
          NODE_ENV: test # ตั้งค่า environment เป็น test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0 # ใช้ Action ของ SonarCloud สำหรับสแกนโค้ด
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token สำหรับ PR analysis
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # ใช้ token ที่เก็บไว้ใน GitHub Secret
        with:
          projectBaseDir: . # ระบุ root ของโปรเจคที่มีไฟล์ sonar-project.properties
